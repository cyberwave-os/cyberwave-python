name: Release to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.0.0, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction
      
      - name: Run tests
        run: |
          poetry run python tests/test_imports.py
          poetry run pytest tests/ -v || echo "No pytest tests found or tests failed"
      
      - name: Verify version matches tag
        run: |
          TAG_VERSION="${{ github.ref_name }}"
          TAG_VERSION="${TAG_VERSION#v}"  # Remove 'v' prefix if present
          POETRY_VERSION=$(poetry version -s)
          echo "Tag version: $TAG_VERSION"
          echo "Poetry version: $POETRY_VERSION"
          if [ "$TAG_VERSION" != "$POETRY_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match poetry version ($POETRY_VERSION)"
            exit 1
          fi
      
      - name: Build and publish to PyPI
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN_SDK }}
          poetry publish --build
